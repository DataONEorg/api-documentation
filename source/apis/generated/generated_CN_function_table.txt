..
  Warning: this file is automatically generated.  Edits will be lost


.. list-table:: Methods for CN component
   :widths: 3 10 10 30
   :header-rows: 1

   * - Tier
     - REST
     - Function
     - Parameters
   * - Tier 1
     - ``GET /object/{pid}``
     - :func:`CN_read.get`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`) ``->``
       :class:`Types.OctetStream`
   * - Tier 1
     - ``GET /meta/{pid}``
     - :func:`CN_read.getSystemMetadata`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`) ``->``
       :class:`Types.SystemMetadata`
   * - Tier 1
     - ``GET /resolve/{pid}``
     - :func:`CN_read.resolve`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`) ``->``
       :class:`Types.ObjectLocationList`
   * - Tier 1
     - ``POST /reserve``
     - :func:`CN_read.reserveIdentifier`
     - (:class:`token<Types.AuthToken>`, :class:`[pid]<Types.Identifier>`,
       ``[scope]``, ``[format]``) ``->`` :class:`Types.Identifier`
   * - Tier 1
     - ``GET /assertRelation/{pidOfSubject}``
     - :func:`CN_read.assertRelation`
     - (:class:`token<Types.AuthToken>`,
       :class:`pidOfSubject<Types.Identifier>`,
       :class:`relationship<Types.???>`, :class:`pidOfObject<Types.Identifier>`)
       ``->`` :class:`Types.Boolean`
   * - Tier 1
     - n/a
     - :func:`CN_read.getChecksum`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`) ``->``
       :class:`Types.Checksum`
   * - Tier 1
     - ``GET /object``
     - :func:`CN_read.search`
     - (:class:`token<Types.AuthToken>`, :class:`query<Types.QueryType>`) ``->``
       :class:`Types.ObjectList`

   * - Tier 1
     - ``GET /formats``
     - :func:`CN_core.listFormats`
     - () ``->`` :class:`Types.ObjectFormatList`
   * - Tier 1
     - ``GET /formats/{fmtid}``
     - :func:`CN_core.getFormat`
     - (:class:`fmtid<Types.Identifier>`) ``->`` :class:`Types.ObjectFormat`
   * - Tier 1
     - ``GET /log``
     - :func:`CN_core.getLogRecords`
     - (:class:`token<Types.AuthToken>`, :class:`fromDate<Types.DateTime>`,
       :class:`[toDate]<Types.DateTime>`, :class:`[event]<Types.Event>`) ``->``
       :class:`Types.LogRecords`
   * - Tier 1
     - ``GET /node``
     - :func:`CN_core.listNodes`
     - () ``->`` :class:`Types.NodeList`
   * - Tier 2
     - ``POST /sessions``
     - :func:`CN_auth.login`
     - (:class:`userId<Types.Principal>`, :class:`password<Types.String>`)
       ``->`` :class:`Types.AuthToken`
   * - Tier 2
     - ``POST /sessions``
     - :func:`CN_auth.sessionRequest`
     - (:class:`certificate<Types.X509Certificate>`) ``->``
       :class:`Types.Challenge`
   * - Tier 2
     - ``POST /sessions``
     - :func:`CN_auth.challengeResponse`
     - (:class:`userId<Types.Principal>`, :class:`password<Types.String>`)
       ``->`` :class:`Types.AuthToken`
   * - Tier 2
     - ``GET /sessions/{token}``
     - :func:`CN_auth.getAuthSession`
     - (:class:`token<Types.AuthToken>`, :class:`sessionToken<Types.AuthToken>`)
       ``->`` :class:`Types.SAML.Assertion`
   * - Tier 2
     - ``PUT /owner/{pid}``
     - :func:`CN_auth.setOwner`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`,
       :class:`userId<Types.Principal>`) ``->`` :class:`Types.Identifier`
   * - Tier 2
     - ``POST /accounts``
     - :func:`CN_auth.newAccount`
     - (:class:`userId<Types.Principal>`, ``password``,
       :class:`[authSystem]<Types.AuthenticationSystem>`) ``->``
       :class:`Types.Principal`
   * - Tier 2
     - ``GET /sessions/verifyToken``
     - :func:`CN_auth.verifyToken`
     - (:class:`token<Types.AuthToken>`) ``->`` :class:`Types.Boolean`
   * - Tier 2
     - ``GET /accounts``
     - :func:`CN_auth.listPrincipals`
     - (:class:`token<Types.AuthToken>`, :class:`query<Types.String>`,
       ``start``, ``count``) ``->`` :class:`Types.PrincipalList`
   * - Tier 2
     - ``POST /accounts/map``
     - :func:`CN_auth.mapIdentity`
     - (:class:`token1<Types.AuthToken>`, :class:`token2<Types.AuthToken>`)
       ``->`` :class:`Types.Boolean`
   * - Tier 2
     - ``POST /groups/{groupName}``
     - :func:`CN_auth.createGroup`
     - (:class:`token<Types.AuthToken>`, :class:`groupName<Types.Principal>`)
       ``->`` :class:`Types.Identifier`
   * - Tier 2
     - ``PUT /groups/{groupName}``
     - :func:`CN_auth.addGroupMembers`
     - (:class:`token<Types.AuthToken>`, :class:`groupName<Types.Principal>`,
       :class:`members<Types.PrincipalList>`) ``->`` :class:`Types.Identifier`
   * - Tier 2
     - ``DELETE /groups/{groupName}``
     - :func:`CN_auth.removeGroupMembers`
     - (:class:`token<Types.AuthToken>`, :class:`groupName<Types.Principal>`,
       :class:`members<Types.PrincipalList>`) ``->`` :class:`Types.Identifier`
   * - Tier 2
     - ``GET /isAuthorized/{pid}``
     - :func:`CN_auth.isAuthorized`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`,
       :class:`operation<Types.Event>`) ``->`` :class:`Types.Boolean`
   * - Tier 2
     - ``PUT /accessRules/{pid}``
     - :func:`CN_auth.setAccess`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`,
       :class:`accessPolicy<Types.AccessPolicy>`) ``->`` :class:`Types.Boolean`
   * - Tier 4
     - ``POST /notify``
     - :func:`CN_storage.setReplicationStatus`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`,
       :class:`status<Types.ReplicationStatus>`) ``->`` :class:`Types.Boolean`
   * - Tier 2
     - ``PUT /node/{pid}``
     - :func:`CN_register.addNodeCapabilities`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`) ``->``
       :class:`Types.Boolean`
   * - Tier 2
     - ``POST /node``
     - :func:`CN_register.register`
     - (:class:`token<Types.AuthToken>`) ``->`` :class:`Types.Identifier`

