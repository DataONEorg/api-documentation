..
  Warning: this file is automatically generated.  Edits will be lost


.. list-table:: Functions defined in :mod:`MN_replication`
   :widths: 10 10 30
   :header-rows: 1

   * - REST
     - Function
     - Parameters
   * - ``GET /object``
     - :func:`listObjects`
     - (:class:`token<Types.AuthToken>`, :class:`[startTime]<Types.DateTime>`,
       :class:`[endTime]<Types.DateTime>`,
       :class:`[objectFormat]<Types.ObjectFormat>`, ``[replicaStatus]``,
       ``[start=0]``, ``[count=1000]``) ``->`` :class:`Types.ObjectList`
   * - ``POST /replicate``
     - :func:`replicate`
     - (:class:`token<Types.AuthToken>`, :class:`pid<Types.Identifier>`,
       :class:`sourceNode<Types.NodeReference>`) ``->`` boolean
   * - ``POST /error``
     - :func:`synchronizationFailed`
     - (:class:`token<Types.AuthToken>`, :class:`message<Types.Exception>`)
       ``->``




.. function:: listObjects(token,[startTime],[endTime],[objectFormat],[replicaStatus],[start=0],[count=1000]) -> ObjectList

   Retrieve the list of objects present on the MN that match the calling
   parameters. This method is required to support the process of :term:`Member
   Node synchronization`. At a minimum, this method should be able to return a
   list of objects that match::



     startTime <= SystemMetadata.dateSysMetadataModified



   but is expected to also support date range (by also specifying *endTime*),
   and should also support slicing of the matching set of records by indicating
   the starting *index* of the response (where 0 is the index of the first item)
   and the *count* of elements to be returned.

   :Use Cases:

     :doc:`UC06 </design/UseCases/06_uc>`, :doc:`UC16 </design/UseCases/16_uc>`

   :REST URL: ``GET /object``

   :param token: The authentication token.

   :type token: :class:`Types.AuthToken`

   :param startTime: Specifies the beginning of the time range from which to
     return object (>=). Queries against
     :attr:`SystemMetadata.dateSysMetadataModified`

   :type startTime: :class:`Types.DateTime`

   :param endTime: Specifies the end of the time range to which to return object
     (<=). Queries against :attr:`SystemMetadata.dateSysMetadataModified`

   :type endTime: :class:`Types.DateTime`

   :param objectFormat: Restrict results to the specified object format.

   :type objectFormat: :class:`Types.ObjectFormat`

   :param replicaStatus: Indicates if replicated objects should be returned in
     the list (i.e. any entries present in the :attr:`SystemMetadata.replica`).
     If ``0``, then no objects that have been replicated should be returned. If
     ``1``, then any objects can be returned, regardless of replication status.
     The default value is ``1``.



   :type replicaStatus: replicaStatus

   :param start=0: The zero-based index of the first value, relative to the
     first record of the resultset that matches the parameters.

   :type start=0: integer

   :param count=1000: The maximum number of entries that should be returned in
     the response. The Member Node may return less entries than specified in
     this value.

   :type count=1000: integer

   :returns: The list of PIDs that match the query criteria. If none match, an
     empty list is returned.

   :rtype: :class:`Types.ObjectList`

   :raises Exceptions.NotAuthorized: ``(errorCode=401, detailCode=1520)``

   :raises Exceptions.InvalidRequest: ``(errorCode=400, detailCode=1540)``

   :raises Exceptions.NotImplemented: ``(errorCode=501, detailCode=1560)``

     Raised if some functionality requested is not implemented. In the case of
     an optional request parameter not being supported, the errorCode should be
     400. If the requested format (through HTTP Accept headers) is not
     supported, then the standard HTTP 406 error code should be returned.


   :raises Exceptions.ServiceFailure: ``(errorCode=500, detailCode=1580)``

   :raises Exceptions.InvalidToken: ``(errorCode=401, detailCode=1530)``

   :raises Exceptions.NotImplemented: ``(errorCode=501, detailCode=1521)``


.. include:: ../examples/listObjects.txt



----

.. function:: replicate(token,pid,sourceNode) -> boolean

   Called by a Coordinating Node to request that the Member Node create a copy
   of the specified object by retrieving it from another Member Nodeode and
   storing it locally so that it can be made accessible to the DataONE system.

   :Use Cases:

     :doc:`UC09 </design/UseCases/09_uc>`

   :REST URL: ``POST /replicate``

   :param token: A token generated by the CN (or perhaps the origin MN) that can
     be used by the receiving MN to 1) verify that the request is from a CN, and
     2) verify to the origin MN that this request is allowed (with perhaps
     elevated privileges).

   :type token: :class:`Types.AuthToken`

   :param pid: The PID for the object that is to be replicated.

   :type pid: :class:`Types.Identifier`

   :param sourceNode: A reference to node from which the content should be
     retrieved. The reference should be resolved by checking the CN node
     registry.

   :type sourceNode: :class:`Types.NodeReference`

   :returns: True if everything works OK, otherwise an error is returned.

   :rtype: boolean

   :raises Exceptions.NotImplemented: ``(errorCode=501, detailCode=2150)``

   :raises Exceptions.ServiceFailure: ``(errorCode=500, detailCode=2151)``

   :raises Exceptions.NotAuthorized: ``(errorCode=401, detailCode=2152)``

   :raises Exceptions.InvalidRequest: ``(errorCode=400, detailCode=2153)``

   :raises Exceptions.InsufficientResources: ``(errorCode=413, detailCode=2154)``

   :raises Exceptions.UnsupportedType: ``(errorCode=400, detailCode=2155)``


.. include:: ../examples/replicate.txt

.. TODO::
    sourceNode is probably an unneeded parameter, as it should be present in the
    SystemMetadata. Resolve.



----

.. function:: synchronizationFailed(token,message) -> 

   This is a callback method used by a CN to indicate to a MN that it cannot
   complete synchronization of the science metadata identified by *pid*. When
   called, the MN should take steps to record the problem description and notify
   an administrator or the data owner of the issue.

   :Use Cases:

     :doc:`UC06 </design/UseCases/06_uc>`

   :REST URL: ``POST /error``

   :param token: An authentication token generated by the CN to verify that a CN
     is making the call.

   :type token: :class:`Types.AuthToken`

   :param message: An instance of the SynchronizationFailed exception with body
     appropriately filled.

   :type message: :class:`Types.Exception`

   :returns: Null body or Exception

   :rtype: 

   :raises Exceptions.NotImplemented: ``(errorCode=501, detailCode=2160)``

   :raises Exceptions.ServiceFailure: ``(errorCode=500, detailCode=2161)``

   :raises Exceptions.NotAuthorized: ``(errorCode=401, detailCode=2162)``

   :raises Exceptions.InvalidRequest: ``(errorCode=400, detailCode=2163)``



----