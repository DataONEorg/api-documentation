..
  Warning: this file is automatically generated.  Edits will be lost


.. list-table:: Functions defined in :mod:`CNRegister`
   :widths: 3 10 10 30
   :header-rows: 1

   * - Tier
     - REST
     - Function
     - Parameters
   * - Tier 2
     - ``PUT /node/{pid}``
     - :func:`addNodeCapabilities`
     - (:class:`cert<Types.X509Certificate>`, :class:`pid<Types.Identifier>`) ``->`` :class:`Types.Boolean`
   * - Tier 2
     - ``POST /node``
     - :func:`register`
     - (:class:`cert<Types.X509Certificate>`) ``->`` :class:`Types.Identifier`




.. function:: addNodeCapabilities(cert,pid,capabilities) -> Boolean

   

   :REST URL: ``PUT /node/{pid}``
   :param cert: X.509 Certificate, passed to the system via SSL client-side authentication, and used to identify and validate the identity of the Subject making the call. The X.509 certificate should be traceable to the CILogon service, and provides various attributes for authorization decisions.  If the X.509 certificate is not provided, then the request should be considered to have originated from the DataONE 'Public' user.
   :type cert: :class:`Types.X509Certificate`

   :param pid:
   :type pid: :class:`Types.Identifier`

   :param capabilities:
   :type capabilities: 

   :returns: True if operation is successful
   :rtype: :class:`Types.Boolean`

   :raises Exceptions.NotImplemented: ``(errorCode=501, detailCode=4820)``

   :raises Exceptions.NotAuthorized: ``(errorCode=401, detailCode=4821)``

   :raises Exceptions.ServiceFailure: ``(errorCode=500, detailCode=4822)``

   :raises Exceptions.InvalidRequest: ``(errorCode=400, detailCode=4823)``




.. function:: register(cert,capabilities) -> Identifier

   

   :REST URL: ``POST /node``
   :param cert: X.509 Certificate, passed to the system via SSL client-side authentication, and used to identify and validate the identity of the Subject making the call. The X.509 certificate should be traceable to the CILogon service, and provides various attributes for authorization decisions.  If the X.509 certificate is not provided, then the request should be considered to have originated from the DataONE 'Public' user.
   :type cert: :class:`Types.X509Certificate`

   :param capabilities:
   :type capabilities: 

   :returns: The identifier of the new node entry.
   :rtype: :class:`Types.Identifier`

   :raises Exceptions.NotImplemented: ``(errorCode=501, detailCode=4840)``

   :raises Exceptions.NotAuthorized: ``(errorCode=401, detailCode=4841)``

   :raises Exceptions.ServiceFailure: ``(errorCode=500, detailCode=4842)``

   :raises Exceptions.InvalidRequest: ``(errorCode=400, detailCode=4843)``


