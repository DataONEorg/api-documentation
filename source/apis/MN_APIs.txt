Member Node APIs
----------------

.. 
  @startuml images/class_mn.png
  package MemberNode {
  package Tier1 {
     class MNCore {
       Boolean : ping()
       Log : getLogRecords()
       
     }
     class MNRead {
   
     }
     class MNQuery {
     
     }
   }
   package Tier2 {
     class MNAuthorization{
     
     }
   }
   package Tier3 {
     class MNStorage {
     
     }
   }
   package Tier4 {
     class MNReplication {
     
     }
   }
  }
  @enduml

.. include:: generated/generated_MN_function_table.txt


Core API
~~~~~~~~

.. module:: MNCore
   :synopsis: Base operations for Member Nodes

The *MN_core* API provides mechanisms for a Member Node to report on the level
of service compliance and to specify replication policies. The capabilities
information is used in the Member Node registration process by the
Coordinating Nodes.

The state of health API provides mechanisms for the monitoring infrastructure 
to report on the current state of the DataONE infrastructure and for the
Coordinating Nodes to track the current operating state of the Member Node.



.. include:: generated/generated_MNCore.txt


Read API
~~~~~~~~

.. module:: MNRead
   :synopsis: Provide tier 1 operations for sharing content from a Member Node.

The *MNRead* API implements methods that enable object management
operations on a :term:`Member Node`.  

.. include:: generated/generated_MNRead.txt


Query API
~~~~~~~~~

.. module:: MNQuery
   :synopsis: An optional tier 1 API for Member Node support of local query.

The *MNQuery* API is an optional API that may be implemented by Member Nodes
that intend to support querying the local repository. The actual form of the
query is undefined, and t is expected that a small set of well known query
engine types will be supported.

.. include:: generated/generated_MNQuery.txt


Authorization API
~~~~~~~~~~~~~~~~~

.. module:: MNAuthorization
   :synopsis: Authorization and access control operations for Member Nodes

Provides mechanisms Member Nodes to verify access to resources for users
(:term:`subject`). See the document :doc:`/design/Authentication` for more
details on some authentication options.

.. include:: generated/generated_MNAuthorization.txt


Storage API
~~~~~~~~~~~

.. module:: MNStorage
   :synopsis: Methods for manipulating (changing) content on a Member Node

.. include:: generated/generated_MNStorage.txt



Replication API
~~~~~~~~~~~~~~~

The Replication API provides methods to support CN-directed replication of
content between MNs.


.. module:: MNReplication
   :synopsis: Handles CN directed replication of content between Member Nodes.


.. include:: generated/generated_MNReplication.txt

