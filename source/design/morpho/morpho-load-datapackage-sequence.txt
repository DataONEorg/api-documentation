@startuml images/morpho_save_new_package_seq.png

  
   participant ": DataStoreController" as data_store_controller <<Morpho>>
   participant ": DataStoreInterface" as data_store <<D1_lib>>
   participant "abstractMetadata: AbstractMetadata" as abstract_metadata <<Morpho>>
   participant "entity: Entity" as entity <<Morpho>>
   participant "dataPackage: DataPackage" as d1_datapackage <<D1_lib>>
   
   data_store_controller -> data_store: load(oreId, storeId)
   activate data_store
   data_store_controller <- data_store: get(oreId) return the output stream object
   data_store_controller <- data_store: getSystemMetadata(oreId) return the system metadata object
   deactivate data_store
   data_store_controller -> data_store_controller: parse the ORE input stream and get list of ids
   data_store_controller -> abstract_metadata: metadataId
   activate abstract_metadata
   data_store_controller -> abstract_metadata: storeId 
   abstract_metadata -> d1_datapackage: dataPackage.add(abstractMetadata)
   deactivate abstract_metadata
   activate d1_datapackage  
   loop iterate the entityId list    
       data_store_controller -> entity: entityId
       activate entity
       data_store_controller -> entity: storeId
       entity -> d1_datapackage: dataPackage.add(entity)
       deactivate entity
   end
   data_store_controller -> d1_datapackage: dataPackage.addRelationShip()
   data_store_controller <- d1_datapackage: dataPackage
   deactivate d1_datapackage
  @enduml
