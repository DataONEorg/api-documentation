@startuml images/morpho_save_new_package_seq.png

  
   participant "abractPackage: AbstractDataPackage" as abstract_package <<Morpho>>
   participant ": DataoneDataStore" as data_store <<Morpho>>
   participant ": DataPackage" as d1_datapackage <<D1_libclient_java>>
   participant ": D1Object" as d1_object <<D1_libclient_java>>
   participant ": Entity" as entity <<Morpho>>
   
   abstract_package -> data_store: delete(NETWORK)
   activate data_store
   abstract_package <- data_store: delete(abstractPackage)
   data_store -> d1_datapackage: buildOREDataPackage(abstractPackage)
   abstract_package  -> d1_datapackage: getOREDataPackage()
   activate d1_datapackage
   abstract_package -> data_store: getIdentifer()
   abstract_package -> data_store: getMetadata()
   abstract_package -> data_store: getMetadataSystemMetadata()
   data_store -> d1_object: create a d1Object for the metadata with the metadata id
   activate d1_object
   d1_object -> d1_object: setSystemMetadata()
   d1_datapackage <- d1_object: addData(d1Object)
   deactivate d1_object
   abstract_package -> data_store: getEntityList()
   loop iterate the entity list 
      data_store <- entity: getIdentifier()
      data_store <- entity: getSource()
      data_store <- entity: getSystemMetadata()
      data_store -> d1_object: create d1Object for the data
      activate d1_object
      d1_object -> d1_object: setSystemMetadata()
      d1_datapackage <- d1_object: addData(d1Object)
      deactivate d1_object
   end
   d1_datapackage -> d1_datapackage: addRelationship()
   d1_datapackage -> d1_object: delete()
   d1_object -> d1_object: delete()
   deactivate d1_object
   deactivate d1_datapackage
   deactivate data_store
  @enduml
