Identity Management and Authenticated Session Management
========================================================

The planning and design for DataONE cybersecurity is predicated on the fact that DataONE is a collaboration of researchers, data providers, institutions, coordinating nodes, member nodes, data collections and other infrastructure components. As such, DataONE is inherently a virtual organization (VO). DataONE, as an entity, spans many physical organizations and administrative domains. For this reason, the primary goal of DataONE cybersecurity is to protect the data and metadata collections that those organizations and administrative domains contribute to the VO, as well as their infrastructure and the DataONE user community. DataONE will necessarily need to accommodate the highly variable security protocols that are in use by its various partners. In planning for cybersecurity in this environment, a layered approach must be used. Each DataONE partner must simultaneously meet requirements of its local institution and must also integrate into the DataONE cyberinfrastructure. DataONE is also a mixture of operational systems that accept and deliver scientific data and support research endeavors to improve the overall data management life-cycle. Cybersecurity management for DataONE will need to be flexible enough to support the very different needs of partner operations and related research. The cybersecurity posture of DataONE will evolve over time both because of continuing maturation of DataONE operational strategies and because of an ever-evolving cybersecurity landscape.

The approach that DataONE will follow for cybersecurity is one in which all sensitive operations and or data/metadata resources within the DataONE VO will require users requesting access to the operation/resource to register and authenticate with the DataONE system before an evaluation of rights to the operation/resource can/will be performed.  DataONE will support authentication through three mechanisms: (1) an internal identity password challenge managed by DataONE, (2) an external identity password challenge managed by one or more trusted 3rd parties, or (3) the verification of a trusted CILogon X.509 certificate.  In all cases, the identity that is verified through the authentication mechanism is mapped to an internal DataONE user identity.  Once a user is authenticated and mapped to their DataONE identity, a short-lived authentication token is generated and used for the duration of the user's DataONE session.  Individual users may also associate multiple external identities to their unique DataONE identity.

To this end, three services will support identity management and authentication:

 * Identity Management - user account registration, identity mapping, and group management
 * Authentication - establishing the identity of a user and mapping the identity to a DataONE identity
 * Authenticated Session Management - establishing a timed-session that identifies a DataONE user

Identity Management
-------------------

Identity Management for DataONE addresses the need to identify users that request the use of services and or data/metadata resources within the DataONE VO (DataONE does recognize that not all services/resources require user identification, thus provisional support for anonymous access to certain services/resources).  To achieve this requirement, DataONE will provide services for users to register their identity with DataONE in a user account so as to create a unique DataONE identifier, along with other attributes, that may be used for authorization and tracking DataONE transactions. 

It is also expected that users may have multiple identities as a result of distributed research endeavors at different participating organizations and or changes in organization affiliations. Because of this, the DataONE Identity Management service will support user identity mappings, which allows users to authenticate using any one of their multiple identities, but still be recognized as the same DataONE identity. When a DataONE authenticated session begins, information pertaining to the user's idenity is available for authorization purposes, which includes a listing of all mapped identities associated with that user; these mapped identities serve equally well for authorization decisions as if using the DataONE identity - that is, within DataONE access control policies, reference to any mapped identity is the same as if using the user's DataONE identity.

In addition, the Identity Management service will provide a system for users to create, store, and modify groups of users that can be used in access control directives.  Only the user creating a group will be allowed to delete the group or to change the group's membership.  Service APIs for group management are outlined below in the Identity Management Service section.

.. Note::
    The Internet2 project has defined a product called Grouper that is a
    standalone group management utility and that publishes a web interface for
    interacting with the service.  It allows users and organizations to create
    and manage groups.  See Grouper_ and earlier work from Internet2 on group
    management through their MACE_ project.

.. _Grouper: https://spaces.internet2.edu/display/Grouper/Grouper+Web+Services

.. _MACE: http://middleware.internet2.edu/dir/groups/

Identifying Principals (aka Subjects)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Principals are users, groups of users, and system services within the DataONE
system.  They need to be represented in access policies, authentication
sessions, and other places within the system.  

The values for identifiers representing principals are unique, persistent, 
non-reassignable strings that follow the length and character constraints of
DataONE Identifiers.  Within those constraints, it is useful to use a
common convention for representing and scoping these principal names.
Conventions in widespread use include:

.. Note::
    TODO: Decide which of these are acceptable for Principal names in DataONE

* LDAP Distinguished Names (DN)
  An example of the syntax for the representation of principals in an LDAP DN is:

      ``uid=mbjones,o=NCEAS,dc=ecoinformatics,dc=org``


* Distinguished Names from CILogon
  An example of the syntax for the representation of principals as emitted from CILogon authentication service is:

      ``/DC=org/DC=cilogon/C=US/O=ProtectNetwork/CN=Matthew Jones A332``

* eduPersonPrincipalName (as used in TeraGrid)
  An example of the syntax for an eduPersonPrincipalName is:

      ``mbjones@NCEAS``

* foaf:Person
  The FOAF_ ontology uses URIs to identify people and organizations without 
  implying a central authority. An example is:

      ``http://www.personexample.org/foaf.rdf#MattJones``
      
The LDAP DN can easily be used within an LDAP directory server as the DN, and
therefore would make implementation of such a system easier.  The CILogon DN
could also be used in this way, but its order of relative DNs is opposite from
LDAP, and the separator is a / rather than a comma (,), so some representation
changes would be needed to store this in LDAP.

The eduPersonPrincipalName_ approach is commonly used in the InCommon Federation
as an attribute within SAML Assertions, and is meant to provide a scoped
identifier that is more compact because it only has one level of hierarchy,
whereas the DNs provide arbitrary depth for scoping the names. The TeraGrid
initiative has standardized on this approach for representing subjects (see
TeraGridPrincipalNames_).

.. _eduPersonPrincipalName: http://middleware.internet2.edu/eduperson/docs/internet2-mace-dir-eduperson-200806.html#eduPersonPrincipalName

.. _TeraGridPrincipalNames: http://www.teragridforum.org/mediawiki/index.php?title=SAML_NameIDs_for_TeraGrid#TeraGrid_Principal_Name_Format

.. _FOAF: http://xmlns.com/foaf/spec/#term_Person

Symbolic Principals
~~~~~~~~~~~~~~~~~~~
Access policies will need to refer to several special symbolic groups of users
that do not need to be explicitly enumerated, but define classes of people in the
system.  The reserved symbolic principals are:

* Authenticated users
    * Any user who has a valid authentication token is considered a member of
      the authenticated users group.  This designation can be used in
      particular to require that user identity information is known and logged
      during read operations.
    * Represented using the special principal 'AuthenticatedUser'
* Public user
    * The Public user represents any user accessing services that does not have
      a valid session token, plus all of those who do have a valid token. 
      If a token is found to be invalid, the user's
      privileges are immediately lowered to those of the symbolic 'Public'
      user.  For create, update, and delete operations, this typically means
      that the user has insufficient privileges to access the service.  At
      times providers may want to provide Public read access to resources.
    * Represented using the special principal 'Public'

Identity Management Service
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The DataONE Identity Management service provides individuals with the ability to register a "new" DataONE user account with the system and to set information into their profile.  This process creates a new identifier value for the user that uniquely identifies them in the DataONE VO from other DataONE users.  This identifier is critical because it associates the user with an authenticated session for use when requesting services and or data/metadata resources from the DataONE VO.  Account creation also requires that the individual provide credential information to DataONE so that DataONE may establish their identity during user authentication.  Credential information consists of either a username/password combination that will be verified internally, through a trusted 3rd party LDAP registry or by providing a CILogon X.509 certificate that is verified through a 2-phase handshake between DataONE and the client application.

* :func:`CN_auth.newAccount`
    Create an identity.

* :func:`CN_auth.verifyToken`
    Validate that a given AuthToken is legitimate and current.

* :func:`CN_auth.mapIdentity`
    Create an equivalence mapping between the identities listed for the 
    users authenticated and represented by token1 and token2.

* :func:`CN_auth.createGroup`
    Create a named group of users.  Throws IdentifierNotUnique if the group
    name is already in use.

* :func:`CN_auth.addGroupMembers`
    Add the listed array of members to the named group, if and only if the user
    represented in token originally created the group.

* :func:`CN_auth.removeGroupMembers`
    Remove the listed array of members from the named group, if and only if the 
    user represented in token originally created the group.


Authentication Service
~~~~~~~~~~~~~~~~~~~~~~
The DataONE Authentication Service provides a set of services for validating
the identity of users and services and then establishing AuthTokens that can be
used to identify the sessions associated with these authenticated users.  A
single AuthToken is always associated with a single user and a single request
address.  The Authentication Service uses various methods to validate the
identity of a user in the system, and then produces an AuthToken in the form of
a SAML assertion that contains the relevant properties for that session.  Two
principal mechanisms are used to authenticate DataONE users: a login service
that takes a DataONE-specific username/password pair as input and returns an
AuthToken reference on success, and an alternate two-phase authentication
service that takes a CILogon X.509 certificate as input and returns an AuthToken 
reference on success.

In general, the user will initiate the request for a session from DataONE through either a dedicated DataONE desktop application or through a web-browser connected to a DataONE web server.  A “valid session” is represented by a digitally signed  “authentication token” (see below) that is generated by DataONE upon authenticating the user by one of the above mechanisms.  The token is then returned to the user for subsequent interactions with DataONE.  The authentication token allows DataONE services to request identity information necessary to perform authorization processing.

.. image::  images/DataONEAuthN-general.png

CILogon X.509 Certificates
..........................

DataONE is working closely with the CILogon project at the National Center for Supercomputer Applications located at the University of Illinois at Urbana-Champaign to streamline and incorporate user identities that originate from academic and commercial institutions in the U.S. that are members of the InCommon federation or through more globally accessible identity providers like Google, Facebook, and Yahoo!.  CILogon acts as an intermediary broker of "short-lived" identity assertions that are made by users verifying their identity through their home institution or identity provider service.  These assertions are converted by CILogon into a longer-lived and more commonly recognized X.509 identity certificate, which can then be reused a number of times when interacting with DataONE.  Benefits of adopting an SSO approach to identity management through CILogon are two-fold: 1) users who regularly identify themselves through their home institution or other identity service will now be able to access DataONE resources without yet another identity to manage and 2) DataONE does not have to become yet another identity provider.

Obtaining a CILogon X.509 certificate requires that the user authenticate through the CILogon InCommon identity services as outlined in the following diagram.

.. image:: images/CILogonAuthN.png

The CILogon X.509 certificate provides a portable credential that binds a user’s public key to their distinguished name or another significant identifier (e.g., email) that is stored in the “subject” field of the certificate.  Once generated, the CILogon X.509 certificate has a specified span of time in which it is considered valid; this information is stored in the “valid not before” and “valid not after” fields of the certificate.

Processing the CILogon X.509 certificate requires an verification exchange between the service provider (DataONE) and the external user.  Upon receiving a “session request” from the user, the DataONE Authentication service will first determine that the user’s CILogon X.509 certificate sent with the request is valid (i.e., verify issuer signature and confirm valid date span).  The service will next generate a secure random one-time number (NOnce - Number used only Once) and register the user’s CILogon X.509 certificate using the NOnce as an index for use at a later time.  The NOnce is then encrypted with the user’s public key and sent back to the user, along with a DataONE X.509 certificate.  The user will then validate the DataONE certificate, decrypt the NOnce with their private key, re-encrypt it with the DataONE public key, and then send it back to DataONE - this last step proves that the user is in command of their private key, and therefore, is the same user identified by their CIlogon X.509 certificate.  Finally, DataONE will decrypt the NOnce with their public key and verify that it is the same number previously sent to the user.  The DataONE Authentication service will then generate the appropriate authentication token and send this back to the user to complete the request.

.. image::  images/DataONEAuthN-X509Validation.png


Service Methods
~~~~~~~~~~~~~~~

* :func:`CN_auth.login` returns :class:`Types.AuthToken`
* :func:`CN_auth.sessionRequest` returns :class:`Types.Challenge`
* :func:`CN_auth.challengeResponse` returns :class:`Types.AuthToken`
* :func:`CN_auth.getAuthSession` returns :class:`SAML.Assertion`

Authenticated Session Management
--------------------------------

For DataONE, identity management and verification is only the first step in ensuring system-wide security.  Many service calls within DataONE will require authentication of the caller to create an authenticated session with a limited duration for access to DataONE services.  The process of authentication for most users will begin with identity verification and downloading of the X.509 certificate from CILogon.  The user will then initiate an authentication action with DataONE in which a local desktop DataONE application, which is acting on behalf of the user, will perform a sequence of credential exchanges between the DataONE authentication service and the application.  This exchange sequence verifies (1) that the certificate originated from CILogon and (2) that the owner of the certificate, the user, is the actual party requesting authentication with DataONE (user identity verification is performed as prerequisite of the certificate).  An alternate pathway for establishing an authenticated session based on username and password pairs will also be provided for the core DataONE Principal identity. Once user authentication succeeds, the DataONE authentication service will generate an internal representation of a "security token" that links to an authenticated session that contains DataONE specific attributes, which uniquely identifies the user in the DataONE system (e.g., user identity, names, and associated groups of the user).  Passed from DataONE system to DataONE system, such as making requests from a client application to a Member Node, the token is a reference to an authenticated session that contains all the necessary information identifying the user of the original service call and other attributes used to determine authorization in the DataONE system.  The token itself will have a short "time to live", thereby limiting the duration of malicious activity if a rogue application or user were to intercept the token.  The token will also have limited applicability, in that it will be intended to be used from a particular host location on the internet, and have other restrictions that prevent it from being broadly used as a surrogate for the user.

Services internal to the DataONE system may operate autonomously to perform maintenance tasks or other asynchronous activities that are not bound to a particular user.  In these cases, a security token will still be generated, but without the prerequisite identity verification.  Such tokens will have a special system identity that signifies it is a "trusted" principal of the DataONE system.  For most instances, this token will serve identically to one generated during the authentication process of normal user.


AuthToken references to an Authenticated Session
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Each DataONE :class:`Types.AuthToken` is a unique identifier that is affiliated
with and specifies the authentication session associated with a particular
request.  DataONE AuthToken References are UUID values that are created by the
DataONE Session Service when a client requests that a session be established.  A
client requests that a session be established from a particular Internet
Protocol address, and all service requests associated with that session MUST
originate from that Internet Protocol address.

The DataONE AuthToken reference is a unique identifier that references a
session that has been established for the purposes of interacting with
particular DataONE service providers. DataONE AuthTokens are generally 
passed in the header of an HTTP request to a service, thereby supporting clients 
that utilize authentication and those that do not, as well as Member Nodes that
support authentication and those that don't.  Any Member Nodes or clients that
do not support authentication and access control will simply ignore the
presence of the AuthToken in the HTTP header information if one is 
present. 

The DataONE HTTP header containing the AuthToken has the name
'x-AuthToken' and contains an identifier value that is a UUID URN; for example, one might send the header:

    ``x-AuthToken: urn:uuid:f689d586-59a6-11e0-8dac-3f586cd046b9``

This session reference is used to indicate the session that should be used for 
requests, and has limited duration based on the session expiration time.
AuthToken references refer to sessions that have limited duration and other
constraints on their validity, and these constraints MUST be validated by
service providers.

If a Node or other data one service provider receives a service request with
the DataONE x-AuthToken header, then the service SHOULD retrieve the associated
:class:`SAML.Assertion` data in order to confirm that the client has 
appropriately authenticated with the DataONE session service. If the service
needs to make authorization decisions, the service MUST validate the the
associated session data, check validity constraints on the session, and then
proceed to make authorization decisions.

While making authorization decisions, the service should apply any
AccessPolicy rules that reference the identifier for the Principal, any 
identifier in the 'equivalentIdentity' attributes in the session, any groups
that are referenced in an 'isMemberOf' attribute in the session, and any
polices that reference the DataONE 'AuthenticatedUser' identity. All of these
identities are valid identities for the authenticated session.

If a Member Node or Coordinating Node receives an AuthToken that is invalid,
can not be found using the :func:`CN_auth.getAuthSession` method, or is
determined to not be satisfying the constraints of the session (such as wrong
source IP Address), then the service MUST return an
:class:`Exceptions.InvalidToken` exception.

If a Member Node or Coordinating Node receives a service request in which there
is no x-AuthToken header, or if the header is empty, then the request should
be considered to be validated as the DataONE 'Public' user.  This user may be
denied access to certain services as determined by appropriate access policies,
or it may be granted access to services when appropriate (e.g., to perform a
:func:`MN_read.get` operation on a data set marked for Public read access).

Structure of metadata about Authenticated Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Metadata about authenticated sessions are represented as a :class:`SAML.Assertion`.
Details of the fields to be included in an :class:`SAML.Assertion` include
Subject, Address, givenName, sn, mail, equivalentIdentity, and group
membership, among other fields.  These fields are all mapped to SAML2 Assertion
elements, as illustrated in the following example of an authenticated session 
represented by a SAML Assertion. Note that these SAML Assertion messages are 
returned when Member Nodes and Coordinating Nodes make calls 
to :func:`CN_auth.getAuthSession`.

.. literalinclude:: ./saml-2-assertion-example.xml
   :language: xml

