Identity Management and Authenticated Session Management
========================================================

The primary purpose of security in DataONE is to protect Member Node data that reside within the system from intentional and or non-intentional harm; for example, DataONE security will prevent the unauthorized viewing of private data and or alteration or deletion of another user's data within the system.  DataONE computational services also benefit from security by protecting services and other system resources from malicious activity that often occurs on the Internet. Security for DataONE is part of the initial system planning and design, thereby providing solid integration to all services - it's not simply an "add-on" wrapper that occurs as an after thought.

Cybersecurity for DataONE is predicated on the fact that DataONE is a collaboration of researchers, data providers, institutions, coordinating nodes, member nodes, data collections and other infrastructure components. As such it is inherently a virtual organization. DataONE as an entity spans many organizations and administrative domains. The goal of the cybersecurity in DataONE is to protect the infrastructure that those organizations and administrative domains contribute to DataONE as well as the data collections and the DataONE user community. DataONE, as a virtual organization, will naturally need to accommodate the highly variable security regimes that are in use in its various partners. In planning for cybersecurity in this environment, a layered approach must be used. Each DataONE entity must simultaneously meet requirements of its local institution and must also integrate into the DataONE cyberinfrastructure. DataONE is also a mixture of operational systems to accept and deliver scientific data and research endeavors to improve the overall data management lifecycle. The cybersecurity management for DataONE will need to be flexible enough to support the very different needs of research and operations. The cybersecurity posture of DataONE will evolve over time both because of continuing maturation of DataONE operational strategies and because of an ever-evolving cybersecurity landscape.

Identity Management
-------------------

Current practice for Internet sites requires users to create new identities (i.e., user name and password) for each domain they interact with when they wish to access protected or sensitive resources so that resource providers can confidently verify the principal behind the request.  Unfortunately, this process has led to an over abundance of user identities and, ultimately, a user "identity" crisis - that is, it has now become a huge burden for users to keep track of all their identities necessary for traversing the Internet successfully.  One approach to mitigate this crisis is to utilize a single identity for all Internet services by adopting a standard mechanism for asserting a userâ€™s identity.  In other words, a "single sign-on" verification that is recognized and trusted by resource service providers on the Internet.

For DataONE identity management, support of a single sign-on (SSO) capability
is paramount because users will span numerous and multiple domains across the
globe, and they will need to collaborate and share data across the myriad of
Member Nodes in the federation.  Simplifying the process to access DataONE resources is one way to reduce unnecessary barriers for the end user.  To this end, DataONE is working closely with the CILogon project at the National Center for Supercomputer Applications located at the University of Illinois at Urbana-Champaign to streamline and incorporate user identities that originate from academic and commercial institutions in the U.S. that are members of the InCommon federation or through more globally accessible identity providers like Google, Facebook, and Yahoo.  CILogon acts as an intermediary broker of "short-lived" identity assertions that are made by users verifying their identity through their home institution or identity provider service.  These assertions are converted by CILogon into a longer-lived and more commonly recognized X.509 identity certificate, which can then be reused a number of times when interacting with DataONE.  Benefits of adopting an SSO approach to identity management through CILogon are two-fold: 1) users who regularly identify themselves through their home institution or other identity service will now be able to access DataONE resources without yet another identity to manage and 2) DataONE does not have to become yet another identity provider.

That said, DataONE users will already have multiple identities from different
participating member nodes, and their affiliations will change over time.
Because of this, DataONE needs a user Identity mapping system that allows users
to authenticate using one of their identities but still be recognized as
equivalent in terms of access to their DataONE identity.  This
Identity Management Service will provide a location to collect and store a user's
identity information, including mappings to their multiple identities.  Because
DataONE will not know these mappings in advance, users will still be required to
register with DataONE so that new mapping may be assigned to their unique
profile when they attempt to authenticate.  This registration process, however,
does not require the need for a new identity; external identities suffice.
Service APIs for managing identity mapping are outlined below in the  Identity
Management Service section. When an authenticated session is started in
DataONE, the AuthSession description of that session will include a listing of
all of the identities associated with that user, and these should be handled as
equivalent for the purposes of authentication and authorization decisions.
Within access policies, references to any of a Principal's identities are
equivalent.

In addition, the Identity Management service will provide a system for users to
create, store, and modify groups of users that can be used in access control
directives.  Only the user creating a group will have access to changing the
group.  Service APIs for group management are outlined below in the
Identity Management Service section.

.. Note::
    The Internet2 project has defined a product called Grouper that is a
    standalone group management utility and that publishes a web interface for
    interacting with the service.  It allows users and organizations to create
    and manage groups.  See Grouper_ and earlier work from Internet2 on group
    management through their MACE_ project.

.. _Grouper: https://spaces.internet2.edu/display/Grouper/Grouper+Web+Services

.. _MACE: http://middleware.internet2.edu/dir/groups/

Identifying Principals (aka Subjects)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Principals are users, groups of users, and system services within the DataONE
system.  They need to be represented in access policies, authentication
sessions, and other places within the system.  

The values for identifiers representing principals are unique, persistent, 
non-reassignable strings that follow the length and chanacter constraints of
DataONE Identifiers.  Within those constraints, it is useful to use a
common convention for representing and scoping these principal names.
Conventions in widespread use include:

.. Note::
    TODO: Decide which of these are acceptable for Principal names in DataONE

* LDAP Distinguished Names (DN)
  An example of the syntax for the representation of principals in an LDAP DN is:

      ``uid=mbjones,o=NCEAS,dc=ecoinformatics,dc=org``


* Distinguished Names from CILogon
  An example of the syntax for the representation of principals as emitted from CILogon authentication service is:

      ``/DC=org/DC=cilogon/C=US/O=ProtectNetwork/CN=Matthew Jones A332``

* eduPersonPrincipalName (as used in TeraGrid)
  An example of the syntax for an eduPersonPrincipalName is:

      ``mbjones@NCEAS``

* foaf:Person
  The FOAF_ ontology uses URIs to identify people and organizations without 
  implying a central authority. An example is:

      ``http://www.personexample.org/foaf.rdf#MattJones``

The LDAP DN can easily be used within an LDAP directory server as the DN, and
therefore would make implementation of such a system easier.  The CILogon DN
could also be used in this way, but its order or relative DNs is opposite from
LDAP, and the separator is a / rather than a comma (,), so some representation
changes would be needed to store this in LDAP.

The eduPersonPrincipalName_ approach is commonly used in the InCommon Federation
as an attribute within SAML Assertions, and is meant to provide a scoped
identifier that is more compact because it only has one level of hierarchy,
whereas the DNs provide arbitrary depth for scoping the names. The TeraGrid
initiative has standardized on this approach for representign subjects (see
TeraGridPrincipalNames_).

.. _eduPersonPrincipalName: http://middleware.internet2.edu/eduperson/docs/internet2-mace-dir-eduperson-200806.html#eduPersonPrincipalName

.. _TeraGridPrincipalNames: http://www.teragridforum.org/mediawiki/index.php?title=SAML_NameIDs_for_TeraGrid#TeraGrid_Principal_Name_Format

.. _FOAF: http://xmlns.com/foaf/spec/#term_Person

Symbolic Principals
~~~~~~~~~~~~~~~~~~~
Access policies will need to refer to several special symbolic groups of users
that do not need to be explicitly enumerated, but define classes of people in the
system.  The reserved symbolic principals are:

* Authenticated users
    * Any user who has a valid authentication token is considered a member of
      the authenticated users group.  This designation can be used in
      particular to require that user identity information is known and logged
      during read operations.
    * Represented using the special principal 'AuthenticatedUser'
* Public user
    * The Public user represents any user accessing services that does not have
      a valid session token, plus all of those who do have a valid token. 
      If a token is found to be invalid, the user's
      priveleges are immediately lowered to those of the symbolic 'Public'
      user.  For create, update, and delete operations, this typically means
      that the user has insufficient priveledges to access the service.  At
      times providers may want to provide Public read access to resources.
    * Represented using the special principal 'Public'

Identity Management Service
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. TODO::
    Link these methods to the generated methods in the API specifications,
    eliminate redundancy of the description text between the two locations.

newAccount(userId, password, [AuthenticationSystem]):: Principal

verifyToken(token):: Boolean

mapIdentity(token1, token2):: void
    Create an equivalence mapping between the identities listed for the 
    users authenticated and represented by token1 and token2.

createGroup(token, groupName)
    Create a named group of users.  Throws IdentifierNotUnique if the group
    name is already in use.

addGroupMembers(token, groupName, memberList)
    Add the listed array of members to the named group, if and only if the user
    represented in token originally created the group.

removeGroupMembers(token, groupName, memberList)
    Remove the listed array of members from the named group, if and only if the 
    user represented in token originally created the group.

listPrincipals(token, query, start, count)
    Generate a list of Principals to be used by clients for exposing the list
    for creating AccessPolicies in client software.

Authenticated Session Management
--------------------------------

For DataONE, identity management and verification is only the first step in
ensuring system-wide security.  Many service calls within DataONE will require
authentication of the caller to create an authenticated session with a limited
duration for access to DataONE services.  The process of authentication for most
users will begin with identity verification and downloading of the X.509
certificate from CILogon.  The user will then initiate an authentication action
with DataONE in which a local desktop DataONE application, which is acting on
behalf of the user, will perform a sequence of credential exchanges between the
DataONE authentication service and the application.  This exchange sequence
verifies (1) that the certificate originated from CILogon and (2) that the owner
of the certificate, the user, is the actual party requesting authentication with
DataONE (user identity verification is performed as prerequisite of the
certificate).  An alternate pathway for establishing an authenticated session
based on username and password pairs will also be provided for the core DataONE
Principal identity. Once user authentication succeeds, the DataONE
authentication service will generate an internal representation of a "security
token" that links to an authenticated session that contains DataONE specific
attributes, which uniquely identifies the user in the DataONE system (e.g., user
identity, names, and associated groups of the user).  Passed from DataONE
system to DataONE system, such as making requests from a client application to a
Member Node, the token is a reference to an authenticated session that
contains all the necessary information identifying the user of the original
service call and other attributes used to determine authorization in the DataONE
system.  The token itself will have a short "time to live", thereby limiting the
duration of malicious activity if a rogue application or user were to intercept
the token.  The token will also have limited applicability, in that it will be
intended to be used from a particular host location on the internet, and have
other restrictions that prevent it from being broadly used as a surrogate for
the user.

Services internal to the DataONE system may operate autonomously to perform maintenance tasks or other asynchronous activities that are not bound to a particular user.  In these cases, a security token will still be generated, but without the prerequisite identity verification.  Such tokens will have a special system identity that signifies it is a "trusted" principal of the DataONE system.  For most instances, this token will serve identically to one generated during the authentication process of normal user.


AuthToken references to an AuthSession
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Each DataONE :class:`Types.AuthToken` is a unique identifier that is affiliated
with and specifies the authentication session associated with a particular
request.  DataONE AuthToken References are UUID values that are created by the
DataONE Session Service when a client requests that a session be established.  A
client requests that a session be established from a particular Internet
Protocol address, and all service requests associated with that session MUST
originate from that Internet Protocol address.

The DataONE AuthToken reference is a unique identifier that references a
session that has been established for the purposes of interacting with
particular DataONE service providers. DataONE AuthTokens are generally 
passed in the header of an HTTP request to a service, thereby supporting clients 
that utilize authentication and those that do not, as well as Member Nodes that
support authentication and those that don't.  Any Member Nodes or clients that
do not support authentication and access control will simply ignore the
presence of the AuthToken in the HTTP header information if one is 
present. 

The DataONE HTTP header containing the AuthToken has the name
'x-AuthToken' and contains an identifier value that is a UUID URN; for example, one might send the header:

    ``x-AuthToken: urn:uuid:f689d586-59a6-11e0-8dac-3f586cd046b9``

This session reference is used to indicate the session that should be used for 
requests, and has limited duration based on the session expiration time.
AuthToken references refer to sessions that have limited duration and other
constraints on their validity, and these constraints MUST be validated by
service providers.

If a Node or other data one service provider receives a service request with
the DataONE x-AuthToken header, then the service SHOULD retrieve the associated
:class:`Types.AuthSession` data in order to confirm that the client has 
appropriately authenticated with the DataONE session service. If the service
needs to make authorization decisions, the service MUST validate the the
associated session data, check validity constraints on the session, and then
proceed to make authorization decisions.

While making authorization decisions, the service should apply any
AccessPolicy rules that reference the identifier for the Principal, any 
identifier in the 'equivalentIdentity' attributes in the session, any groups
that are referenced in an 'isMemberOf' attribute in the session, and any
polices that reference the DataONE 'AuthenticatedUser' identity. All of these
identities are valid identities for the authenticated session.

If a Member Node or Coordinating Node receives an AuthToken that is invalid,
can not be found using the :func:`CN_auth.getAuthSession` method, or is
determined to not be satisfying the constraints of the session (such as wrong
source IP Address), then the service MUST return an
:class:`Exceptions.InvalidToken` exception.

If a Member Node or Coordinating Node receives a service request in which there
is no x-AuthToken header, or if the header is empty, then the request should
be considered to be validated as the DataONE 'Public' user.  This user may be
denied access to certain services as determined by appropriate access policies,
or it may be granted access to services when appropriate (e.g., to perform a
:func:`MN_read.get` operation on a data set marked for Public read access).

AuthSession structure
~~~~~~~~~~~~~~~~~~~~~
:class:`Types.AuthSession` metadata are represented as a SAML assertion.  
Details of the fields to be included in an :class:`Types.AuthSession` include
Subject, Address, givenName, familyName, email, equivalentIdentities, and group
membership, among other fields.  These fields are all mapped to SAML2 Assertion
elements, as illustrated in the following example of an AuthSession represented
by a SAML Assertion. Note that these SAML Assertion messages are returned when
Member Nodes and Coordinating Nodes make calls to :func:`CN_auth.getAuthSession`.

.. literalinclude:: ./saml-2-assertion-example.xml
   :language: xml

Authentication Service
~~~~~~~~~~~~~~~~~~~~~~
The DataONE Authentication Service provides a set of services for validating
the identity of users and services and then establishing AuthTokens that can be
used to identify the sessions associated with these authenticated users.  A
single AuthToken is always associated with a single user and a single request
address.  The Authentication Service uses various methods to validate the
identity of a user in the system, and then produces an AuthToken in the form of
a SAML assertion that contains the relevant properties for that session.  Two
principal mechanisms are used to authenitcate DataONE users: a login service
that takes a DataONE-specific username/password pair as input and returns an
AuthToken reference on success, and an alternate two-phase authentication
service that takes a CILogon X.509 certificate as input and returns an AuthToken 
reference on success.

Service Methods
~~~~~~~~~~~~~~~

* login(username, password):: :class:`Types.AuthToken`
* sessionRequest(certificate):: :class:`Types.Challenge`
* challengeResponse(encryptedNonce):: :class:`Types.AuthToken`
* login(certificate):: :class:`Types.AuthToken`
* getAuthSession(authToken):: :class:`Types.AuthSession`

