CRUD API
~~~~~~~~

.. module:: MN_crud
   :synopsis: Create, read, update, and delete operations on Member Nodes

The ``MN_crud`` API implements methods that enable object management
operations on a :term:`Member Node`.  


.. include:: generated/generated_MN_crud.txt


----

.. Note:: Stuff past here seems to be a bit bogus. Needs to be revisted.

----

.. function:: register (token, ID, metadata)

   .. TODO:: Describe this operation.

   :param token: The authentication token returned by :func:`login`

   :param ID:

   :param metadata:


----

.. function:: batchGet(token, GUIDs) -> ?

  Identical to get() except that a list of identifiers is requested.

  The issue here is how to serialize the results. There are some conceptual
  mechanisms for handling structured markup such as XML, but no consistent
  approaches for working with data blobs. Perhaps this method should apply
  only to system metadata, for which the serialization can be defined
  independently of all the other participating nodes?

  :param token: (:class:`Types.AuthToken`) The authentication token returned 
    by ``login()``

  :param GUIDs: (GuidList) The list of identifiers to retrieve.

  :rtype: 
   Bytes of the specified objects. **How are multiple objects serialized?**

  :raises Exceptions.NotAuthorized: The supplied identity does not have READ
     permission on the object.

  :raises Exceptions.NotFound: The object specified by GUID does not exist.

  .. TODO:: batchGet specifies that multiple objects may be retrieved in a
     single call. How are these objects packaged in the response?


.. function:: checkDataQuality (GUID)

  .. TODO:: need details on what this operation is supposed to be doing.

  :param GUID: object to check



